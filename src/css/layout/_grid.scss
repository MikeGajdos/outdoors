.row {
    max-width: $grid-width; /* hwen there is 1140px which width in px nut we know we have 10px root font size hence 114 rem... when there is this much available space row will be that size*/
    
    margin: 0 auto; /* !!!!!!!!trick to center a block element inside of the other block element.. auto meants the browserr will automatically figuare out left and right margin cos we set top and bottom to zero.. set left and rright automatically means both will be the same*/
    

    &:not(:last-child){ /*we are selectiing everything apart from the last child NOT PSEUDO CLASS */
        margin-bottom: $gutter-vertical;

        @include respond(tab-port){
            margin-bottom: $gutter-vertical-small; /* new gap for rows vertically */
        }

    }

    @include respond(tab-port){
        max-width: 50rem;
        padding: 0 3rem;
    }


    @include clearfix;

    /* ^ this atrribute selector which starts with specified
    * is which containes
    and $ atritbute which ends with ..of couorese we could and col before all that other shit and do it that way and style each columm */
    [class^="col-"]{
        
        float: left;
        

        &:not(:last-child){
            margin-right: $gutter-horizontal; /* so if you wanna see the gutter or the gapin between logic is in the syntax*/

            @include respond(tab-port){
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
                /* getting rid of gaps as we defined gutters and giving it some space vertically with this new variable */
            }
    
        }


        @include respond(tab-port){ /* on device <900 column occupy 100% width */
            width: 100% !important;
        }


    }

    .col-1-of-2 { /* we can mix units calc funciotn look at syntex dont forget to float if you are using float*/
        width: calc((100% - #{$gutter-horizontal}) / 2);
        
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}); /* just by judging of the oreangered layot and calculating by simple math twixe the isze of the row of 3 ( twice the size of one we calculates ) plus the gutter */
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc(2 *((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 *((100% - 3 * #{$gutter-horizontal}) / 4) +  2 * #{$gutter-horizontal});
    }

}